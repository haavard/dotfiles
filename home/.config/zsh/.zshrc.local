# ---------------------
# .zshrc.local
#
# Using grml's zshrc
# https://grml.org/zsh/
# ---------------------

# try sourcing a file, silently ignoring if it doesn't exist
function source_if_exists { [ -e "$1" ] && source "$1" }

# Arch Linux syntax highlighting and command-not-found
source_if_exists \
    /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source_if_exists /usr/share/doc/pkgfile/command-not-found.zsh

# Ubuntu syntax highlighting and command_not_found
source_if_exists /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source_if_exists /etc/zsh_command_not_found

# store history in $XDG_DATA_HOME
HISTFILE="${XDG_DATA_HOME:-$HOME/.cache}/.zhistory"

# pass unmatched globs to the command, instead of failing
# e.g. "zsh: no matches found: HEAD^"
unsetopt nomatch

# don't correct or warn about completion internals (e.g. _wget)
CORRECT_IGNORE='_*'
zstyle ':acceptline:default' nocompwarn true

# use full hostname in prompt
zstyle ':prompt:grml:left:items:host' token '%M '

# legal colors for hostname (same as weechat.color.chat_nick_colors)
host_colors=(1 2 3 4 5 6 9 13 24 25 28 29 30 31 32 33 34 35 36 37 38 39 40 41
42 43 44 45 47 48 49 50 51 58 60 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
77 78 79 80 81 82 83 84 85 86 87 94 95 96 97 98 99 100 101 102 104 105 106 107
108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 130 131 132 133
134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
154 155 156 157 158 159 166 167 168 169 170 171 172 173 174 175 176 177 178 179
180 181 182 183 184 185 186 187 189 190 191 192 193 194 195 197 198 199 202 203
204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223
224 225 226 227 228 229 230)

# color hostname by its hash
function host_color {
    local hash="0x${$(sha1sum <<< $HOST)[1,8]}"
    local color="${host_colors[$hash % ${#host_colors[@]}]}"
    REPLY="%F{$color}"
}
if ! grml_theme_has_token host-color; then
    grml_theme_add_token host-color -i host_color
fi
zstyle ':prompt:grml:left:items:host' post '%f'

# add virtualenv to prompt
function virtual_env_prompt { REPLY=${VIRTUAL_ENV+(${VIRTUAL_ENV:t}) } }
if ! grml_theme_has_token virtual-env; then
    grml_theme_add_token virtual-env -f virtual_env_prompt '%F{magenta}' '%f'
fi

zstyle ':prompt:grml:left:setup' items \
    rc virtual-env change-root user at host-color host path vcs percent

# use nvim as vim if available
if check_com -c nvim; then
    alias vim=nvim
    export EDITOR=nvim
fi

# configuration shortcuts
alias ez='$EDITOR '"${0:A} && source ${0:A}"
alias ev='$EDITOR ~/.vimrc'
alias ex='$EDITOR ~/.config/X11/Xresources && xrdb ~/.config/X11/Xresources'

# vimisms
alias :q='exit'
alias :e='$EDITOR'
function :h { vim "+help $@ | only" }

# arch signoffs login
alias signoff='ARCHWEB_USERNAME=haavard '\
'ARCHWEB_PASSWORD="$(pass logins/archweb)" signoff'
